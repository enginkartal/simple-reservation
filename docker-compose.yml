version: "3.9"

services:
    nginx:
        image: nginx:latest
        container_name: nginx
        command: nginx -g "daemon off;"
        restart: unless-stopped
        tty: true
        ports:
            - "9100:9100"
        volumes:
            - ./:/var/www
            - ./docker/nginx/missafir.nginx.conf:/etc/nginx/conf.d/default.conf
        networks:
            - backend
    mysql:
        image: mysql:8.0
        platform: linux/x86_64
        command: --default-authentication-plugin=mysql_native_password
        volumes:
            - "db-mysql:/var/lib/mysql"
        environment:
            MYSQL_ROOT_PASSWORD: 'missafir-root'
            MYSQL_DATABASE: 'missafir-db'
            MYSQL_USER: 'missafir-user'
            MYSQL_PASSWORD: 'missafir-password'
        ports:
            - '3306:3306'
        networks:
            - backend
    redis:
        image: 'redis:alpine'
        ports:
            - '6379:6379'
        volumes:
            - 'db-redis:/data'
        networks:
            - backend
    app:
        build:
            context: ./
            dockerfile: ./docker/php/Dockerfile
        image: missafir
        depends_on:
            - redis
            - mysql
        container_name: missafir-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        networks:
            - backend

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###
networks:
    backend:
        driver: bridge
volumes:
    db-mysql:
        driver: local
    db-redis:
        driver: local

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
